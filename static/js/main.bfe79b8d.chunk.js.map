{"version":3,"sources":["components/Button/Button.jsx","App.js","index.js"],"names":["Button","onClick","children","className","Grid","styled","div","Row","Input","input","Container","calculate","numberOne","operator","numberTwo","App","useState","total","setTotal","display","setDisplay","setOperator","previousButtonPress","setPreviousButtonPress","operand","setOperand","handleNumber","number","toString","split","includes","newOperand","Number","toFixed","slice","join","handleOperator","symbol","newTotal","disabled","value","handleNegative","handlePercent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfe79b8d.chunk.js","sourcesContent":["import React from 'react';\nimport './Button.css'\n\nconst Button = ({ onClick, children }) => {\n  return <button className=\"button\" onClick={onClick}>{children}</button>\n}\n\nexport default Button;","import React, { useState } from 'react';\nimport Button from './components/Button';\nimport styled from 'styled-components';\n\n\nconst Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Row = styled.div`\n  display: flex;\n`;\n\nconst Input = styled.input`\n  width: 80%; \n  margin-top: 50px; \n  background-color: #DEDADA;\n  color: black;\n  border: gray;\n  font-size: 60px;\n  text-align: right;\n  font-family: arial;\n`;\n\nconst Container = styled.div`\n  width: 500px;\n  height: 670px;\n  background-color: #DEDADA;\n  text-align: center;\n  font-family: 'Trispace', sans-serif;\n  margin: auto;\n  margin-top: 50px;\n`\n\nconst calculate = (numberOne, operator, numberTwo) => {\n  if (operator === '+') {\n    return numberOne + numberTwo;\n  }\n  if (operator === '-') {\n    return numberOne - numberTwo;\n  }\n\n  if (operator === '/') {\n    if (numberTwo === 0) {\n      return numberOne;\n    } else {\n      return numberOne / numberTwo;\n    }\n  }\n\n  if (operator === 'x') {\n    if (numberTwo === 0) {\n      return numberOne;\n    } else {\n      return numberOne * numberTwo;\n    }\n  }\n  return 0;\n}\n\nconst App = () => {\n  const [total, setTotal] = useState(0);\n  const [display, setDisplay] = useState(0);\n  const [operator, setOperator] = useState('+');\n  const [previousButtonPress, setPreviousButtonPress] = useState('+');\n  const [operand, setOperand] = useState(0);\n\n  const handleClear = () => {\n    setOperand(0);\n    setDisplay(0);\n    setTotal(0);\n    setOperator('+');\n  }\n\n  const handleNumber = number => {\n    setPreviousButtonPress(operator)\n    const characters = operand.toString().split('');\n    if (characters.includes('.')) {\n      const newOperand = Number(\"\" + operand + number);\n      setOperand(newOperand);\n      setDisplay(newOperand);\n\n    } else {\n      const newOperand = ((operand * 10) + number);\n      setOperand(newOperand);\n      setDisplay(newOperand);\n    }\n    if (number === '.') {\n      const newOperand = (operand * 1.0).toFixed(1).toString().split('').slice(0, -1).join('')\n      setDisplay(newOperand)\n      setOperand(newOperand)\n    }\n  }\n\n  const handleOperator = symbol => {\n    let newTotal = 0;\n    if (previousButtonPress === '=') {\n      newTotal = calculate(total, symbol, operand)\n    } else {\n      newTotal = calculate(operand, symbol, total)\n    }\n    if (symbol === '=') {\n      newTotal = calculate(total, operator, operand);\n      setPreviousButtonPress(symbol)\n    }\n\n    setTotal(newTotal);\n    setOperator(symbol)\n    setDisplay(newTotal);\n    setOperand(0);\n  }\n\n  const handlePercent = () => {\n    const newOperand = operand / 100;\n    setOperand(newOperand);\n    setDisplay(newOperand)\n  }\n\n  const handleNegative = () => {\n    if (previousButtonPress === '=') {\n      const newTotal = total * -1;\n      setTotal(newTotal);\n      setDisplay(newTotal);\n    } else {\n      const newOperand = operand * -1;\n      setOperand(newOperand);\n      setDisplay(newOperand);\n    }\n  }\n\n  return (\n    <Container>\n\n      <Input disabled value={display}></Input>\n      <Grid>\n        <Row>\n\n          <Button onClick={() => { handleClear() }}>C</Button>\n          <Button onClick={() => { handleNegative() }}>+/-</Button>\n          <Button onClick={() => { handlePercent() }}>%</Button>\n          <Button onClick={() => { handleOperator('/') }}>รท</Button>\n        </Row>\n        <Row>\n          <Button onClick={() => { handleNumber(7) }}>7</Button>\n          <Button onClick={() => { handleNumber(8) }}>8</Button>\n          <Button onClick={() => { handleNumber(9) }}>9</Button>\n          <Button onClick={() => { handleOperator('x') }}>x</Button>\n        </Row>\n        <Row>\n          <Button onClick={() => { handleNumber(4) }}>4</Button>\n          <Button onClick={() => { handleNumber(5) }}>5</Button>\n          <Button onClick={() => { handleNumber(6) }}>6</Button>\n          <Button onClick={() => { handleOperator('-') }}>-</Button>\n        </Row>\n        <Row>\n          <Button onClick={() => { handleNumber(1) }}>1</Button>\n          <Button onClick={() => { handleNumber(2) }}>2</Button>\n          <Button onClick={() => { handleNumber(3) }}>3</Button>\n          <Button onClick={() => { handleOperator('+') }}>+</Button>\n        </Row>\n        <Row>\n          <Button onClick={() => { handleNumber(0) }}>0</Button>\n          <Button onClick={() => { handleNumber('.') }}>.</Button>\n          <Button onClick={() => { handleOperator('=') }}>=</Button>\n\n        </Row>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}